#!/usr/bin/env groovy
def aws_pwd = "eyJwYXlsb2FkIjoiU1ZUWVo0T0NCZmROaWN5Y3JuZ3R5QUNuUW13K3o4Q04zRUNxbkRmbHM2U2RFVHlKd0UwT0lOZ09kZUJvN2srWWhUNHR6MFBOcU1Ob1Q0bDRFU2htYllHazg5eUxGaExIeFd6cFZGQ3pkSU4yTU5ybkp4T2szb01aUTZ4MFBrZ08xR3NsMkFobGJHZUhXQVY1WlV6Q3d0blBxa09JN2p1ZkxJMVpSZnhraUZ4dDZmN2syRldYOEtqbXBRc25IZVdNOVE5WE41M3krUDJlNWhCQlpENHJWU3RpNnRRR2V6bGRpWU1xNHlrWEVJSFJKSllOcjlDMStnVzFtUS9IeDBObXFLMU92Vkx0aGw0TThBcFFWRFJzN1pMZ29KdFBubEgxRzYyS3ZjbmR5d1hOQWtUSjBHWEVRMG1pbzhNMFovdE15VVVBV3BuQjBPd3l4Z3ZZQlkraVp3OFlXRU5ITE5XdXhycUF4WWhMcmp0bllKM0JuRjROUTRtZVFJQzVkVlo3RkZMYlhkZm5QcHVvNjB6ZzgxT3B5YWdTYnV4d09nNmthYVJQSndGcWtQVVR0Rk1xSGM1Sk93MVNISXpiZXRnSVVORTNPL0xMempreGE5TWZGYlRjSkdzK0c4WjBjMUI0d1RNUmNmb3ZPSXE3Szl0bWZ3T3IyRFUvVUdadlpIaEdzbXZ4cFQ2ekdTZDgyUjVhaUF1VllCK0JvOWZpWHZiSVB5b1VYVmR1M0c3aUVtM1Fvd0dMVzl3NXljTmxxQ3IvTHpIT3MvZndqSjRJQXpISW9KV1NxNkgzUFR6L29ES2RYTHdaTHBDR09pMW9OT0R6SmJXbHZPQWpkRjVqaU1HSTRvbU52dnlsVVRMT3BQR3krQTROZ1diZ0hNYjFURTRuMlRMMHBpWVorc0VGQi9kbDU5YXg4aUlRb204dWl2VU04SEtTVHFIaWlqY0ZuaUNIcEJGTXhmZUQ4TGVtU1ZuNmoxREczVXhXeER2dzU1VFE1a1Vtb2FvekVicmpjSEYzdVh5ajBzdmtyWHMwRDJIdU8rZ1Y3L0xDRkdDRXR6RjdKOVlCT1QvdklUc0RpL3Zsd1hJdTA4MEpaajFrZ00wdU1aSFFZeFFYL1poRUFZU3RZTXpFM0k4bE9qWWgyd1MxUE90a3pHajFnOHRwamVDb2tEZlFsSzFzd2RXMTcvUzlCKy9OOXpDNERkeEIyRWJ6Vjd5Wkpack9iNFZOTXFxdHRzUDBpeWJUOUZJMzM4N3p0aHIrdERmLy96Wmt2V3UyRktnTFY4Q1VvQXZ1NC9scXc0Qm1GL2ZaY1Uxc1kwWjl0MU1waUc5UzdLOWVESjduOE5MOFpHaGozQXZRYVYxU0dDUFg1SFhKc1kvV3lCWllhd3dyYmdyUXlHV1J3SzlJZjlnSjBjaHF4aWNVTTM5UmowMjZTT1h5UXVxc0F4cEoxOWhZOXc5S01zdStYUk9PZUlCT2duejJVRDV3IiwiZGF0YWtleSI6IkFRRUJBSGo2bGM0WElKdy83bG4wSGMwMERNZWs2R0V4SENiWTRSSXBUTUNJNThJblV3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURHYXZ3UVF6bis1U1RoT2JQZ0lCRUlBNzd0aHpoVHcxVFRZWnprSjh1WUxpU1FHVlcwWUVFK2VlaUp1ZFBIT1NLdXBhem9tSm9EMnp6NEhyZVJDcXRaUnVmUjRBK0piYlNYWE1PcEE9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNjIwMTkxMDc0fQ=="
pipeline {
    agent any
    parameters {
        choice choices: artifacts(), description: 'List of Artifacts', name: 'VERSION'
    }
    stages{
        stage('Clone Repository') {
            steps{
                script{
                    deleteDir()
                    checkout scm
                }
            }
        }
        //stage('Delete OCR Image') {
        //    steps{
        //        script{
        //            sh '${WORKSPACE}/scripts/ocr_img_del.sh'
        //        }
        //    }
        //}
        /*stage('Download Artifacts') {
            steps {
                script {
                    def server = Artifactory.server 'Internal-Artifactory'
                    def buildInfo = Artifactory.newBuildInfo()
                    buildInfo.env.capture = true
                    def downloadSpec = """{
                        "files": [{
                            "pattern": "orbit-releases/${VERSION}/reporting.war"
                        },
                        {
                            "pattern": "orbit-releases/${VERSION}/ORBIT_HOME.zip"
                        },
                        {
                            "pattern": "orbit-files/Wallet_cicdinternal.zip"
                        },
                        {
                            "pattern": "orbit-files/orbit.properties"
                        },
                        {
                            "pattern": "orbit-files/server.xml"
                        },
                        {
                            "pattern": "orbit-files/setenv.sh"
                        },
                        {
                            "pattern": "orbit-files/logging.properties"
                        },
                        {
                            "pattern": "orbit-files/tomcat-users.xml"
                        },
                        {
                            "pattern": "orbit-files/licenses/web/ORBITBI_5D_5S_10E_105DAYS.orbitlic"
                        },
                        {
                            "pattern": "orbit-files/licenses/scheduler/SCHSVC_BI_5D_5S_10E_87DAYS.orbitlic"
                        },
                        {
                            "pattern": "orbit-files/licenses/publisher/PUBSVC_BI_5D_5S_10E_87DAYS.orbitlic"
                        }]
                    }"""
                    server.download(downloadSpec)
                    rtBuildInfo (maxBuilds: 1, maxDays: 2, doNotDiscardBuilds: ["3"], deleteBuildArtifacts: true)
                    server.publishBuildInfo buildInfo
                }
            }
        } */

        stage('Building mono image') {
            steps{
                script {
                    //sh 'mv server.xml tomcat-users.xml logging.properties setenv.sh ${WORKSPACE}/dockerfiles/mono'
                    sh 'cp -R /tmp/ofiles/server.xml /tmp/ofiles/tomcat-users.xml /tmp/ofiles/logging.properties /tmp/ofiles/setenv.sh ${WORKSPACE}/dockerfiles/mono'
                    //sh 'mv ${VERSION}/reporting.war  ${WORKSPACE}/dockerfiles/mono'
                    sh 'cp -R /tmp/ofiles/${VERSION}/reporting.war  ${WORKSPACE}/dockerfiles/mono'
                    sh 'docker build --network=host -t orbitmono:${VERSION} ${WORKSPACE}/dockerfiles/mono'
                }
            }
        }
        stage('Building orbit_sync image') {
            steps{
                script {
                    sh 'unzip -q  /tmp/ofiles/${VERSION}/ORBIT_HOME.zip -d ${WORKSPACE}/dockerfiles/orbit_home_sync'
                    //sh 'mv orbit.properties ${WORKSPACE}/dockerfiles/orbit_home_sync/ORBIT_HOME/conf'
                    sh 'cp -R /tmp/ofiles/orbit.properties ${WORKSPACE}/dockerfiles/orbit_home_sync/ORBIT_HOME/conf'
                    sh 'mkdir -p ${WORKSPACE}/dockerfiles/orbit_home_sync/ORBIT_HOME/adw_wallet'
                    sh 'unzip -q /tmp/ofiles/Wallet_cicdadw.zip -d ${WORKSPACE}/dockerfiles/orbit_home_sync/ORBIT_HOME/adw_wallet'
                    /*sh 'mv ${WORKSPACE}/licenses/web/ORBITBI_5D_5S_10E_105DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses'
                    sh 'mv ${WORKSPACE}/licenses/scheduler/SCHSVC_BI_5D_5S_10E_87DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses'
                    sh 'mv ${WORKSPACE}/licenses/publisher/PUBSVC_BI_5D_5S_10E_87DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses' */
                    sh 'cp -R /tmp/ofiles/web/ORBITBI_5D_5S_10E_105DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses'
                    sh 'cp -R /tmp/ofiles/scheduler/SCHSVC_BI_5D_5S_10E_87DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses'
                    sh 'cp -R /tmp/ofiles/publisher/PUBSVC_BI_5D_5S_10E_87DAYS.orbitlic dockerfiles/orbit_home_sync/ORBIT_HOME/licenses'
                    sh 'docker build --network=host -t orbit_home_sync:${VERSION} ${WORKSPACE}/dockerfiles/orbit_home_sync' 
                }
            }
        }

        stage('Push mono Image') {
            steps{
                script{
                    //docker.withRegistry('https://bom.ocir.io','OCRlogin') {
                    sh 'docker login --username AWS --password ${aws_pwd} 860929710773.dkr.ecr.us-west-2.amazonaws.com'
                    sh 'docker tag orbitmono:${VERSION} 860929710773.dkr.ecr.us-west-2.amazonaws.com/mono:${VERSION}'
                    sh 'docker push 860929710773.dkr.ecr.us-west-2.amazonaws.com/mono:${VERSION}'
                    sh 'docker logout 860929710773.dkr.ecr.us-west-2.amazonaws.com'
                    
                    //}
                }
            } 
        }
        stage('Push orbit_home_sync Image') {
            steps{
                script{
                    //docker.withRegistry('https://bom.ocir.io','OCRlogin') {                
                    sh 'docker login --username AWS --password $(/usr/local/bin/aws ecr get-login-password) 860929710773.dkr.ecr.us-west-2.amazonaws.com'
                    sh 'docker tag orbit_home_sync:${VERSION} 860929710773.dkr.ecr.us-west-2.amazonaws.com/home_sync:${VERSION}'
                    sh 'docker push 860929710773.dkr.ecr.us-west-2.amazonaws.com/home_sync:${VERSION}'
                    sh 'docker logout 860929710773.dkr.ecr.us-west-2.amazonaws.com'
                    //}
                }
            } 
        }
    }
}

def artifacts () {

    node {
        script {
            deleteDir()
            checkout scm
            def jfrog_version_list = ["Select",];
            sh '${WORKSPACE}/scripts/jfrog_repos.sh'
            def list = readFile("${WORKSPACE}/scripts/version.txt").readLines()
            for (item in list) {
                jfrog_version_list.add("$item")
            }
            sh 'rm -rf ${WORKSPACE}/scripts/version.txt'  
            println jfrog_version_list
            return jfrog_version_list;
            }
        }
    }
